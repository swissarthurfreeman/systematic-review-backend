%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true

quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.database.generation=update

quarkus.datasource.jdbc.transactions=xa
%dev.quarkus.datasource.db-kind = h2
%dev.quarkus.datasource.jdbc.url = jdbc:h2:mem:test;DB_CLOSE_DELAY=-1

%dev.quarkus.hibernate-orm.database.generation = drop-and-create

%test.quarkus.datasource.db-kind = h2
%test.quarkus.datasource.jdbc.url = jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
%test.quarkus.hibernate-orm.database.generation = drop-and-create


# careful comments aren't supported security configuration
# allows us to curl at the above url.

%test.quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/

%dev.quarkus.keycloak.devservices.port=8180
quarkus.oidc.client-id=backend
quarkus.oidc.credentials.secret=secret
quarkus.oidc.application-type=service
quarkus.oidc.authentication.user-info-required=true

# quarkus.kafka.devservices.port=9092
%dev.kafka.bootstrap.servers=localhost:9092
mp.messaging.incoming.Jarticles.connector=smallrye-kafka
mp.messaging.incoming.Jarticles.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.Jarticles.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
